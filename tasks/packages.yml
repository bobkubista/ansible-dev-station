- name: ensure that my default packages are installed
  apt:
    pkg:
    - joe
    - cloc
    - openjdk-11-jdk
    - openjdk-11-source
    - curl
    - docker
    - docker-compose
    - git
    - meld
    - openvpn
    #- teams
    - maven
    - network-manager-openvpn
    - pptp-linux
    
- name: Install slack from url
  apt:
    deb: https://downloads.slack-edge.com/linux_releases/slack-desktop-4.8.0-amd64.deb
    
#Chrome browser    
- name: Does the Google apt file exist?
  command: test -f {{chrome_apt_file}}
  register: google_apt_exists
  ignore_errors: True
  changed_when: false

- name: Add Google Chrome key
  shell: wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
  when: google_apt_exists.rc == 1

- name: Add Google Chrome repo
  copy: 
    content: "deb http://dl.google.com/linux/chrome/deb/ stable main" 
    dest: "{{chrome_apt_file}}" 
    owner: root 
    group: root 
    mode: "644"
  when: google_apt_exists.rc == 1

- name: Update apt cache
  apt: 
    update_cache: yes
  when: google_apt_exists.rc == 1

- name: Install Google Chrome
  apt: 
    pkg: google-chrome-stable
  
  # Spotify
- name: Does the Spotify apt file exist?
  command: test -f {{spotify_apt_file}}
  register: spotify_apt_exists
  ignore_errors: True
  changed_when: false

- name: Add Spotify key
  apt_key: keyserver=hkp://keyserver.ubuntu.com:80 id=931FF8E79F0876134EDDBDCCA87FF9DF48BF1C90 state=present
  when: spotify_apt_exists.rc == 1

- name: Add Spotify repo
  apt_repository: repo='deb http://repository.spotify.com stable non-free'
  when: spotify_apt_exists.rc == 1

- name: Update apt cache
  apt: 
    update_cache: yes
  when: spotify_apt_exists.rc == 1

- name: Install Spofify
    apt: name=spotify-client update_cache=yes state=latest

#terraform
- name: Does the Terraform apt file exist?
  command: test -f {{terraform_apt_file}}
  register: terraform_apt_exists
  ignore_errors: True
  changed_when: false

- name: Add Terraform key
  shell: wget -q -O - https://apt.releases.hashicorp.com/gpg | apt-key add -
  when: google_apt_exists.rc == 1

- name: Add Terraform repo
  copy: 
    content: "deb [arch-amd64] https://apt.releases.hashicorp.com $(lsb_release - cs) main" 
    dest: "{{terraform_apt_file}}" 
    owner: root 
    group: root 
    mode: "644"
  when: terraform_apt_exists.rc == 1

- name: Update apt cache
  apt: 
    update_cache: yes
  when: terraform_apt_exists.rc == 1

- name: Install Terraform
  apt: 
    pkg: terraform
  
